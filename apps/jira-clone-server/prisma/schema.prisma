datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Project {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  tasks       Task[]
  updatedAt   DateTime @updatedAt
}

model Task {
  comments    Comment[]
  createdAt   DateTime          @default(now())
  description String?
  dueDate     DateTime?
  histories   History[]
  id          String            @id @default(cuid())
  labels      Label[]
  priority    EnumTaskPriority?
  project     Project?          @relation(fields: [projectId], references: [id])
  projectId   String?
  status      EnumTaskStatus?
  stepsItems  Steps[]
  title       String?
  updatedAt   DateTime          @updatedAt
  user        User?             @relation(fields: [userId], references: [id])
  userId      String?
}

model Label {
  color     String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
  updatedAt DateTime @updatedAt
}

model Comment {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  comments  Comment[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  tasks     Task[]
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Steps {
  createdAt   DateTime         @default(now())
  description String?
  id          String           @id @default(cuid())
  status      EnumStepsStatus?
  task        Task?            @relation(fields: [taskId], references: [id])
  taskId      String?
  updatedAt   DateTime         @updatedAt
}

model History {
  action    String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  task      Task?     @relation(fields: [taskId], references: [id])
  taskId    String?
  timestamp DateTime?
  updatedAt DateTime  @updatedAt
}

model Sprint {
  createdAt DateTime  @default(now())
  endDate   DateTime?
  id        String    @id @default(cuid())
  name      String?
  startDate DateTime?
  updatedAt DateTime  @updatedAt
}

enum EnumTaskPriority {
  Option1
}

enum EnumTaskStatus {
  Option1
}

enum EnumStepsStatus {
  Option1
}
