/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Sprint as PrismaSprint } from "@prisma/client";

export class SprintServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SprintCountArgs, "select">): Promise<number> {
    return this.prisma.sprint.count(args);
  }

  async sprints(args: Prisma.SprintFindManyArgs): Promise<PrismaSprint[]> {
    return this.prisma.sprint.findMany(args);
  }
  async sprint(
    args: Prisma.SprintFindUniqueArgs
  ): Promise<PrismaSprint | null> {
    return this.prisma.sprint.findUnique(args);
  }
  async createSprint(args: Prisma.SprintCreateArgs): Promise<PrismaSprint> {
    return this.prisma.sprint.create(args);
  }
  async updateSprint(args: Prisma.SprintUpdateArgs): Promise<PrismaSprint> {
    return this.prisma.sprint.update(args);
  }
  async deleteSprint(args: Prisma.SprintDeleteArgs): Promise<PrismaSprint> {
    return this.prisma.sprint.delete(args);
  }
}
